{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/models/cuenta.ts","webpack:///./src/app/models/transfer.ts","webpack:///./src/app/models/user.ts","webpack:///./src/app/pages/carga/carga.component.css","webpack:///./src/app/pages/carga/carga.component.html","webpack:///./src/app/pages/carga/carga.component.ts","webpack:///./src/app/pages/dashboard/dashboard.component.css","webpack:///./src/app/pages/dashboard/dashboard.component.html","webpack:///./src/app/pages/dashboard/dashboard.component.ts","webpack:///./src/app/pages/home/home.component.css","webpack:///./src/app/pages/home/home.component.html","webpack:///./src/app/pages/home/home.component.ts","webpack:///./src/app/pages/login/login.component.css","webpack:///./src/app/pages/login/login.component.html","webpack:///./src/app/pages/login/login.component.ts","webpack:///./src/app/pages/registro/registro.component.css","webpack:///./src/app/pages/registro/registro.component.html","webpack:///./src/app/pages/registro/registro.component.ts","webpack:///./src/app/pages/retiro/retiro.component.css","webpack:///./src/app/pages/retiro/retiro.component.html","webpack:///./src/app/pages/retiro/retiro.component.ts","webpack:///./src/app/pages/terceros/terceros.component.css","webpack:///./src/app/pages/terceros/terceros.component.html","webpack:///./src/app/pages/terceros/terceros.component.ts","webpack:///./src/app/pages/transferencia/transferencia.component.css","webpack:///./src/app/pages/transferencia/transferencia.component.html","webpack:///./src/app/pages/transferencia/transferencia.component.ts","webpack:///./src/app/services/cuenta.service.ts","webpack:///./src/app/services/transfer.service.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from './pages/home/home.component';\nimport { RegistroComponent } from './pages/registro/registro.component';\nimport { LoginComponent } from './pages/login/login.component';\nimport { RetiroComponent } from './pages/retiro/retiro.component';\nimport { CargaComponent } from './pages/carga/carga.component';\nimport { DashboardComponent } from './pages/dashboard/dashboard.component';\nimport { TransferComponent } from './pages/transferencia/transferencia.component';\nimport { TercerosComponent } from './pages/terceros/terceros.component';\n\n\nconst routes: Routes = [\n  { path: 'home'    , component: HomeComponent },\n  { path: 'registro', component: RegistroComponent },\n  { path: 'login'   , component: LoginComponent },\n  { path: 'carga/:rut'   , component: CargaComponent },\n  { path: 'retira/:rut'   , component: RetiroComponent },\n  { path: 'dashboard/:rut'   , component: DashboardComponent },\n  { path: 'transferencias/:rut'   , component: TransferComponent },\n  { path: 'terceros/:rut'   , component: TercerosComponent },\n  { path: '**', redirectTo: 'home' }\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<nav class=\\\"navbar navbar-dark bg-dark\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n        <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Mini Banco</a>\\r\\n    </div>\\r\\n</nav>\\r\\n\\r\\n\\r\\n\\r\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AppRoutingModule } from './app-routing.module';\r\n\r\n// Components\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './pages/home/home.component';\r\nimport { LoginComponent } from './pages/login/login.component';\r\nimport { RegistroComponent } from './pages/registro/registro.component';\r\nimport { CargaComponent } from './pages/carga/carga.component';\r\nimport { RetiroComponent } from './pages/retiro/retiro.component';\r\nimport { DashboardComponent } from './pages/dashboard/dashboard.component';\r\nimport { TransferComponent } from './pages/transferencia/transferencia.component';\r\nimport { TercerosComponent } from './pages/terceros/terceros.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    LoginComponent,\r\n    RegistroComponent,\r\n    CargaComponent,\r\n    RetiroComponent,\r\n    DashboardComponent,\r\n    TransferComponent,\r\n    TercerosComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    AppRoutingModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export class Cuenta {\r\n  constructor(_id = \"\", cuenta = \"\", rut = \"\", monto = 0, saldo = 0) {\r\n    this._id = _id;\r\n    this.cuenta = cuenta;\r\n    this.rut = rut;\r\n    this.monto = monto;\r\n    this.saldo = saldo;\r\n  }\r\n\r\n  _id: string;\r\n  cuenta: string;\r\n  rut: string;\r\n  monto: number;\r\n  saldo: number;\r\n}\r\n","export class Transferencia {\r\n  constructor(_id = \"\", cuenta = \"\", rut = \"\", monto = 0, tipo =\"\") {\r\n    this._id = _id;\r\n    this.cuenta = cuenta;\r\n    this.rut = rut;\r\n    this.monto = monto;\r\n    this.tipo = tipo;\r\n  }\r\n\r\n  _id: string;\r\n  cuenta: string;\r\n  rut: string;\r\n  monto: number;\r\n  tipo: string;\r\n}\r\n","export class User {\r\n  constructor(_id = \"\", nombre = \"\", rut = \"\", correo = \"\", pass =\"\") {\r\n    this._id = _id;\r\n    this.nombre = nombre;\r\n    this.rut = rut;\r\n    this.correo = correo;\r\n    this.pass = pass;\r\n  }\r\n\r\n  _id: string;\r\n  nombre: string;\r\n  rut: string;\r\n  correo: string;\r\n  pass: string;\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-login100\\\">\\n    <div class=\\\"wrap-login100 p-t-50 p-b-90\\\">\\n        <form class=\\\"login100-form validate-form flex-sb flex-w\\\" #cargaForm=\\\"ngForm\\\" (ngSubmit)=\\\"carga(cargaForm)\\\">\\n\\n            <span class=\\\"login100-form-title p-b-51\\\">\\n                    Carga Saldo\\n                </span>\\n\\n            <!-- <span class=\\\"text-danger\\\">El correo es obligatorio</span> -->\\n            <div class=\\\"wrap-input100 m-b-16\\\">\\n                <input class=\\\"input100\\\" type=\\\"number\\\" name=\\\"monto\\\" #monto=\\\"ngModel\\\" [(ngModel)]=\\\"cuentaservice.selectedCuenta.monto\\\" placeholder=\\\"monto\\\">\\n\\n                <span class=\\\"focus-input100\\\"></span>\\n            </div>\\n            <div class=\\\"container-login100-form-btn m-t-17\\\">\\n                <button class=\\\"login100-form-btn\\\" type=\\\"submit\\\">\\n                        Aceptar\\n                    </button>\\n            </div>\\n            <div class=\\\"container-login100-form-btn m-t-17\\\">\\n                <button class=\\\"login100-form-btn\\\" (click)=\\\"volver()\\\">\\n                        Volver\\n                    </button>\\n            </div>\\n\\n        </form>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router,ActivatedRoute, Params } from '@angular/router';\n\nimport { CuentaService } from \"../../services/cuenta.service\";\nimport { NgForm } from \"@angular/forms\";\nimport { Cuenta } from \"../../models/cuenta\";\nimport { TransferService } from '../../services/transfer.service';\nimport { Transferencia } from '../../models/transfer';\n\nimport swal from 'sweetalert';\n\n@Component({\n  selector: 'app-carga',\n  templateUrl: './carga.component.html',\n  styleUrls: ['./carga.component.css'],\n  providers: [CuentaService,TransferService],\n})\nexport class CargaComponent implements OnInit {\n\n  constructor(private cuentaservice: CuentaService,\n              private router: Router,\n              private rutaActiva: ActivatedRoute,\n              private transferservice: TransferService) {}\n\n  ngOnInit() {\n    this.cuentaservice.selectedCuenta = new Cuenta();\n  }\n\n  carga(form?: NgForm) {\n    var rut =  this.rutaActiva.snapshot.paramMap.get('rut');\n    this.cuentaservice.selectedCuenta.rut = rut;\n    this.cuentaservice.selectedCuenta.cuenta = rut.replace(/\\./g,'');\n    this.cuentaservice.selectedCuenta.monto = form.value.monto;\n    this.cuentaservice.getCuenta().subscribe((res) =>{\n      var cuenta = res.find(x => x.rut === this.cuentaservice.selectedCuenta.rut);\n      cuenta.saldo = Number(cuenta.saldo) + Number(this.cuentaservice.selectedCuenta.monto);\n\n      this.cuentaservice.putSaldo(cuenta).subscribe((res) =>{\n        console.log('carga realizada ',res);\n        var transfer = new Transferencia();\n        transfer.cuenta = this.cuentaservice.selectedCuenta.cuenta;\n        transfer.monto = this.cuentaservice.selectedCuenta.monto ;\n        transfer.rut = this.cuentaservice.selectedCuenta.rut;\n        transfer.tipo = 'Carga';\n        swal(\"Carga Realizada\");\n        this.transferservice.createTransfer(transfer).subscribe((res) =>{\n          console.log('transferencia registrada',transfer);\n        });\n      });\n    });\n  }\n  \n  volver(){\n    var rut =  this.rutaActiva.snapshot.paramMap.get('rut');\n    this.router.navigate(['/dashboard/'+rut]);\n\n  }\n}\n","module.exports = \"\"","module.exports = \"<form class=\\\"login100-form validate-form flex-sb flex-w\\\">\\n\\n    <span class=\\\"login100-form-title p-b-51\\\">\\n      Dashboard\\n  </span>\\n    <div>\\n        <div class=\\\"btn-group-vertical\\\">\\n            <a (click)=\\\"carga()\\\" class=\\\"btn btn-secondary\\\">\\n                Carga Saldo\\n            </a>\\n        </div>\\n\\n        <div>\\n            <a (click)=\\\"retiro()\\\" class=\\\"btn btn-secondary\\\">\\n                Retira Saldo\\n            </a>\\n        </div>\\n        <div>\\n            <a (click)=\\\"terceros()\\\" class=\\\"btn btn-secondary\\\">\\n                Transferencia a otras cuentas\\n            </a>\\n        </div>\\n        <div>\\n            <a (click)=\\\"transferencias()\\\" class=\\\"btn btn-secondary\\\">\\n                Listado Transferencias\\n            </a>\\n        </div>\\n        <div>\\n            <a routerLink=\\\"home\\\" class=\\\"btn btn-secondary\\\">\\n                Home\\n            </a>\\n        </div>\\n    </div>\\n\\n\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n   \n  constructor(private rutaActiva: ActivatedRoute,\n              private router: Router) { }\n  \n  ngOnInit() {\n  }\n\n  carga(){\n    var rut = this.rutaActiva.snapshot.params['rut'];\n    this.router.navigate(['/carga/'+rut]);\n  }\n\n  retiro(){\n    var rut = this.rutaActiva.snapshot.params['rut'];\n    this.router.navigate(['/retira/'+rut]);\n  }\n\n  transferencias(){\n    var rut = this.rutaActiva.snapshot.params['rut'];\n    this.router.navigate(['/transferencias/'+rut]);\n  }\n  terceros(){\n    var rut = this.rutaActiva.snapshot.params['rut'];\n    this.router.navigate(['/terceros/'+rut]);\n  }\n}\n","module.exports = \"\"","module.exports = \"<form class=\\\"login100-form validate-form flex-sb flex-w\\\">\\n\\n    <span class=\\\"login100-form-title p-b-51\\\">\\n      HOME\\n  </span>\\n    <div>\\n        <div class=\\\"col-md-5\\\">\\n            <a routerLink=\\\"/login\\\" class=\\\"btn btn-primary\\\">\\n                Login\\n            </a>\\n            <a routerLink=\\\"/registro\\\" class=\\\"btn btn-primary\\\">\\n                Registro\\n            </a>\\n        </div>\\n    </div>\\n\\n</form>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-login100\\\">\\n    <div class=\\\"wrap-login100 p-t-50 p-b-90\\\">\\n        <form class=\\\"login100-form validate-form flex-sb flex-w\\\" #loginForm=\\\"ngForm\\\" (ngSubmit)=\\\"login(loginForm)\\\">\\n\\n            <span class=\\\"login100-form-title p-b-51\\\">\\n                    Login\\n                </span>\\n\\n\\n            <div class=\\\"wrap-input100 m-b-16\\\">\\n                <input class=\\\"input100\\\" type=\\\"text\\\" name=\\\"correo\\\" #correo=\\\"ngModel\\\" [(ngModel)]=\\\"userservice.selectedUser.correo\\\" placeholder=\\\"correo\\\">\\n\\n                <span class=\\\"focus-input100\\\"></span>\\n            </div>\\n\\n            <!-- <span class=\\\"text-danger\\\">La contraseña debe de ser más de 6 letras</span> -->\\n            <div class=\\\"wrap-input100 m-b-16\\\" data-validate=\\\"Password is required\\\">\\n                <input class=\\\"input100\\\" type=\\\"password\\\" name=\\\"pass\\\" #pass=\\\"ngModel\\\" [(ngModel)]=\\\"userservice.selectedUser.pass\\\" placeholder=\\\"contraseña\\\">\\n                <span class=\\\"focus-input100\\\"></span>\\n            </div>\\n\\n            <div class=\\\"flex-sb-m w-full p-t-3 p-b-24\\\">\\n                <div class=\\\"contact100-form-checkbox\\\">\\n                    <input class=\\\"input-checkbox100\\\" id=\\\"ckb1\\\" type=\\\"checkbox\\\" name=\\\"remember-me\\\">\\n                    <label class=\\\"label-checkbox100\\\" for=\\\"ckb1\\\">\\n                            Recordar mi usuario\\n                        </label>\\n                </div>\\n\\n                <div>\\n                    <a routerLink=\\\"/registro\\\" class=\\\"txt1\\\">\\n                            ¿No tienes cuenta?\\n                        </a>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"container-login100-form-btn m-t-17\\\">\\n                <button class=\\\"login100-form-btn\\\" type=\\\"submit\\\">\\n                        Ingresar\\n                    </button>\\n            </div>\\n\\n        </form>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { UserService } from \"../../services/user.service\";\nimport { NgForm } from \"@angular/forms\";\nimport { User } from \"../../models/user\";\n\nimport swal from 'sweetalert';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n  providers: [UserService],\n})\nexport class LoginComponent implements OnInit {\n  titularAlerta:string = '';\n  constructor(private userservice: UserService,\n    private router: Router) {}\n\n  ngOnInit() {\n    this.userservice.selectedUser = new User();\n  }\n\n  login(form?: NgForm) {\n    this.userservice.getUsers().subscribe((res) =>{\n      var user = res.find(x => x.correo === form.value.correo);\n      if(null != user && user.correo == form.value.correo && \n        user.pass == form.value.pass ){\n        console.log('Login correcto');\n        this.router.navigate(['/dashboard/'+user.rut]);\n      }else{\n        console.log('Login incorrecto');\n        swal(\"Usuario no existe\");\n\n      }\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"limiter\\\">\\n    <div class=\\\"container-login100\\\">\\n        <div class=\\\"wrap-login100 p-t-50 p-b-90\\\">\\n            <form class=\\\"login100-form validate-form flex-sb flex-w\\\" #registroForm=\\\"ngForm\\\" (ngSubmit)=\\\"registro(registroForm)\\\">\\n\\n                <span class=\\\"login100-form-title p-b-51\\\">\\n                        Crear nueva cuenta\\n                    </span>\\n\\n                <div class=\\\"wrap-input100 m-b-16\\\">\\n                    <input class=\\\"input100\\\" type=\\\"text\\\" name=\\\"correo\\\" #correo=\\\"ngModel\\\" [(ngModel)]=\\\"userservice.selectedUser.correo\\\" type=email required placeholder=\\\"Email\\\">\\n\\n                    <span class=\\\"focus-input100\\\"></span>\\n                </div>\\n\\n                <div class=\\\"wrap-input100 m-b-16\\\">\\n                    <input class=\\\"input100\\\" type=\\\"text\\\" name=\\\"rut\\\" #rut=\\\"ngModel\\\" [(ngModel)]=\\\"userservice.selectedUser.rut\\\" required (ngChange)=\\\"checkRut(this)\\\" placeholder=\\\"rut\\\">\\n\\n                    <span class=\\\"focus-input100\\\"></span>\\n                </div>\\n                <!-- <span class=\\\"text-danger\\\">El nombre es obligatorio</span> -->\\n                <div class=\\\"wrap-input100 m-b-16\\\">\\n                    <input class=\\\"input100\\\" type=\\\"text\\\" name=\\\"nombre\\\" #nombre=\\\"ngModel\\\" [(ngModel)]=\\\"userservice.selectedUser.nombre\\\" required placeholder=\\\"Nombre y apellidos\\\">\\n\\n                    <span class=\\\"focus-input100\\\"></span>\\n                </div>\\n\\n                <!-- <span class=\\\"text-danger\\\">La contraseña debe de ser más de 6 letras</span> -->\\n                <div class=\\\"wrap-input100 m-b-16\\\" data-validate=\\\"Password is required\\\">\\n                    <input class=\\\"input100\\\" type=\\\"password\\\" maxlength=\\\"6\\\" name=\\\"pass\\\" #pass=\\\"ngModel\\\" [(ngModel)]=\\\"userservice.selectedUser.pass\\\" required placeholder=\\\"Password\\\">\\n                    <span class=\\\"focus-input100\\\"></span>\\n                </div>\\n\\n                <div class=\\\"flex-sb-m w-full p-t-3 p-b-24\\\">\\n                    <div>\\n                        <a routerLink=\\\"/login\\\" class=\\\"txt1\\\">\\n                                ¿Ya tienes cuenta? / Ingresar\\n                            </a>\\n                    </div>\\n                </div>\\n                <span class=\\\"text-danger\\\" *ngIf=\\\"registroForm.submitted && registroForm.invalid\\\">Debe ingresar todos los campos</span>\\n                <span class=\\\"text-danger\\\" *ngIf=\\\"registroForm.submitted && registroForm.value.yaexiste===true\\\">Usuario ya existe</span>\\n\\n                <div class=\\\"container-login100-form-btn m-t-17\\\">\\n                    <button class=\\\"login100-form-btn\\\" type=\\\"submit\\\">\\n                            Crear cuenta\\n                        </button>\\n                </div>\\n\\n            </form>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { UserService } from \"../../services/user.service\";\nimport { CuentaService } from \"../../services/cuenta.service\";\nimport { NgForm } from \"@angular/forms\";\nimport { User } from \"../../models/user\";\nimport { Cuenta } from 'src/app/models/cuenta';\n\n@Component({\n  selector: 'app-registro',\n  templateUrl: './registro.component.html',\n  styleUrls: ['./registro.component.css'],\n  providers: [UserService,CuentaService],\n})\nexport class RegistroComponent implements OnInit {\n\n\n  constructor(private userservice: UserService,\n              private router: Router,\n              private cuentaservice: CuentaService) {}\n\n  ngOnInit() { \n    this.userservice.selectedUser = new User();\n    this.cuentaservice.selectedCuenta = new Cuenta();\n  }\n\n  registro(form?: NgForm) {\n    console.log(form);\n    if(form.controls['rut'].errors  ||\n      form.controls['nombre'].errors ||\n      form.controls['correo'].errors ||\n      form.controls['pass'].errors){\n        console.log(\"Datos vacios\")\n        return form.invalid == true;\n    }\n    this.userservice.getUsers().subscribe((res) =>{\n      var user = res.find(x => x.rut === form.value.rut);\n      console.log('usuario',user);\n      if(null != user && user.rut === form.value.rut ){\n        console.log('Usuario ya existe');\n        form.value.yaexiste = true;\n      }else{\n        var nuevoUsuario = new User();\n        nuevoUsuario.correo = form.value.correo;\n        nuevoUsuario.nombre = form.value.nombre;\n        nuevoUsuario.pass = form.value.pass;\n        nuevoUsuario.rut = form.value.rut;\n        console.log('nuevoUsuario',nuevoUsuario);\n        this.userservice.postUser(nuevoUsuario).subscribe((res) =>{\n          console.log(res);\n          if(res){\n            var nuevaCuenta = new Cuenta();\n            nuevaCuenta.cuenta = form.value.rut.replace(/\\./g,'');;\n            nuevaCuenta.rut = form.value.rut;\n            nuevaCuenta.monto = 0;\n            nuevaCuenta.saldo = 0;\n            this.cuentaservice.postCuenta(nuevaCuenta).subscribe((res) =>{\n              console.log('nuevaCuenta',nuevaCuenta);\n\n            });\n            this.router.navigate(['/dashboard']);\n          }\n        });\n      }\n    });\n  }\n\n  checkRut(rut) {\n    // Despejar Puntos\n    var valor = rut.value.replace('.','');\n    // Despejar Guión\n    valor = valor.replace('-','');\n    \n    // Aislar Cuerpo y Dígito Verificador\n    var cuerpo = valor.slice(0,-1);\n    var dv = valor.slice(-1).toUpperCase();\n    \n    // Formatear RUN\n    rut.value = cuerpo + '-'+ dv\n    \n    // Si no cumple con el mínimo ej. (n.nnn.nnn)\n    if(cuerpo.length < 7) { rut.setCustomValidity(\"RUT Incompleto\"); return false;}\n    \n    // Calcular Dígito Verificador\n    var suma = 0;\n    var multiplo = 2;\n    \n    // Para cada dígito del Cuerpo\n    for(let i=1;i<=cuerpo.length;i++) {\n    \n        // Obtener su Producto con el Múltiplo Correspondiente\n        var index = multiplo * valor.charAt(cuerpo.length - i);\n        \n        // Sumar al Contador General\n        suma = suma + index;\n        \n        // Consolidar Múltiplo dentro del rango [2,7]\n        if(multiplo < 7) { multiplo = multiplo + 1; } else { multiplo = 2; }\n  \n    }\n    \n    // Calcular Dígito Verificador en base al Módulo 11\n    var dvEsperado = 11 - (suma % 11);\n    \n    // Casos Especiales (0 y K)\n    dv = (dv == 'K')?10:dv;\n    dv = (dv == 0)?11:dv;\n    \n    // Validar que el Cuerpo coincide con su Dígito Verificador\n    if(dvEsperado != dv) { rut.setCustomValidity(\"RUT Inválido\"); return false; }\n    \n    // Si todo sale bien, eliminar errores (decretar que es válido)\n    rut.setCustomValidity('');\n}\n\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-login100\\\">\\n    <div class=\\\"wrap-login100 p-t-50 p-b-90\\\">\\n        <form class=\\\"login100-form validate-form flex-sb flex-w\\\" #retiroForm=\\\"ngForm\\\" (ngSubmit)=\\\"retiro(retiroForm)\\\">\\n\\n            <span class=\\\"login100-form-title p-b-51\\\">\\n                    Retiro\\n                </span>\\n\\n            <!-- <span class=\\\"text-danger\\\">El correo es obligatorio</span> -->\\n            <div class=\\\"wrap-input100 m-b-16\\\">\\n                <input class=\\\"input100\\\" type=\\\"number\\\" name=\\\"monto\\\" #monto=\\\"ngModel\\\" [(ngModel)]=\\\"cuentaservice.selectedCuenta.monto\\\" placeholder=\\\"monto\\\">\\n\\n                <span class=\\\"focus-input100\\\"></span>\\n            </div>\\n\\n\\n\\n            <div class=\\\"container-login100-form-btn m-t-17\\\">\\n                <button class=\\\"login100-form-btn\\\" type=\\\"submit\\\">\\n                        Aceptar\\n                    </button>\\n            </div>\\n            <div class=\\\"container-login100-form-btn m-t-17\\\">\\n                <button class=\\\"login100-form-btn\\\" (click)=\\\"volver()\\\">\\n                        Volver\\n                    </button>\\n            </div>\\n\\n        </form>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { CuentaService } from \"../../services/cuenta.service\";\nimport { NgForm } from \"@angular/forms\";\nimport { Cuenta } from \"../../models/cuenta\";\nimport { Transferencia } from '../../models/transfer';\nimport { TransferService } from '../../services/transfer.service';\n\nimport swal from 'sweetalert';\n\n@Component({\n  selector: 'app-retiro',\n  templateUrl: './retiro.component.html',\n  styleUrls: ['./retiro.component.css'],\n  providers: [CuentaService, TransferService],\n})\nexport class RetiroComponent implements OnInit {\n\n  constructor(private cuentaservice: CuentaService,\n    private transferservice: TransferService,\n    private router: Router,\n    private route: ActivatedRoute) {}\n\n  ngOnInit() {\n    this.cuentaservice.selectedCuenta = new Cuenta();\n    this.cuentaservice.selectedCuenta.rut = this.route.snapshot.paramMap.get('rut');\n  }\n\n  retiro(form?: NgForm) {\n    this.cuentaservice.getCuenta().subscribe((res) =>{\n      var cuenta = res.find(x => x.rut === this.cuentaservice.selectedCuenta.rut);\n      if(cuenta.saldo > form.value.monto){\n        console.log('Saldo actual', cuenta.saldo);\n        cuenta.saldo = Number(cuenta.saldo) - Number(form.value.monto);\n        this.cuentaservice.putSaldo(cuenta).subscribe((res) =>{\n          console.log('Saldo actual', cuenta.saldo);\n          var transfer = new Transferencia();\n          transfer.cuenta = cuenta.cuenta;\n          transfer.monto = this.cuentaservice.selectedCuenta.monto ;\n          transfer.rut = this.cuentaservice.selectedCuenta.rut;\n          transfer.tipo = 'Retiro';\n          this.transferservice.createTransfer(transfer).subscribe((res) =>{\n            console.log('transferencia registrada',transfer);\n          });\n        });\n        swal(\"Retiro realizado\");\n      }else{\n        swal(\"Saldo insuficiente\");\n      }\n    });\n  }\n\n  volver(){\n    var rut =  this.route.snapshot.paramMap.get('rut');\n    this.router.navigate(['/dashboard/'+rut]);\n\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-login100\\\">\\n    <div class=\\\"wrap-login100 p-t-50 p-b-90\\\">\\n        <form class=\\\"login100-form validate-form flex-sb flex-w\\\" #tercerosForm=\\\"ngForm\\\" (ngSubmit)=\\\"transferencias(tercerosForm)\\\">\\n\\n            <span class=\\\"login100-form-title p-b-51\\\">\\n                    Transferencia a terceros\\n                </span>\\n\\n            <div class=\\\"wrap-input100 m-b-16\\\">\\n                <input class=\\\"input100\\\" type=\\\"text\\\" name=\\\"rut\\\" #rut=\\\"ngModel\\\" [(ngModel)]=\\\"cuentaservice.selectedCuenta.rut\\\" placeholder=\\\"rut destino\\\">\\n\\n                <span class=\\\"focus-input100\\\"></span>\\n            </div>\\n            <div class=\\\"wrap-input100 m-b-16\\\">\\n                <input class=\\\"input100\\\" type=\\\"number\\\" name=\\\"monto\\\" #monto=\\\"ngModel\\\" [(ngModel)]=\\\"cuentaservice.selectedCuenta.monto\\\" placeholder=\\\"monto\\\">\\n\\n                <span class=\\\"focus-input100\\\"></span>\\n            </div>\\n            <div class=\\\"container-login100-form-btn m-t-17\\\">\\n                <button class=\\\"login100-form-btn\\\" type=\\\"submit\\\">\\n                        Aceptar\\n                    </button>\\n            </div>\\n            <div class=\\\"container-login100-form-btn m-t-17\\\">\\n                <button class=\\\"login100-form-btn\\\" (click)=\\\"volver()\\\">\\n                        Volver\\n                    </button>\\n            </div>\\n\\n        </form>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router,ActivatedRoute, Params } from '@angular/router';\n\nimport { CuentaService } from \"../../services/cuenta.service\";\nimport { NgForm } from \"@angular/forms\";\nimport { Cuenta } from \"../../models/cuenta\";\nimport { TransferService } from '../../services/transfer.service';\nimport { Transferencia } from '../../models/transfer';\n\nimport swal from 'sweetalert';\n\n@Component({\n  selector: 'app-terceros',\n  templateUrl: './terceros.component.html',\n  styleUrls: ['./terceros.component.css'],\n  providers: [CuentaService,TransferService],\n})\nexport class TercerosComponent implements OnInit {\n\n  constructor(private cuentaservice: CuentaService,\n              private router: Router,\n              private rutaActiva: ActivatedRoute,\n              private transferservice: TransferService) {}\n\n  ngOnInit() {\n    console.log('carga saldo rutaactiva rut :',this.rutaActiva.snapshot.params);\n    this.cuentaservice.selectedCuenta = new Cuenta();\n  }\n\n  transferencias(form?: NgForm) {\n    this.cuentaservice.selectedCuenta.rut = form.value.rut;\n    this.cuentaservice.selectedCuenta.cuenta = form.value.rut;\n    this.cuentaservice.selectedCuenta.monto = form.value.monto;\n    this.cuentaservice.getCuenta().subscribe((res) =>{\n      var cuenta = res.find(x => x.rut === this.cuentaservice.selectedCuenta.rut);\n      if(cuenta){\n          cuenta.saldo = Number(cuenta.saldo) + Number(this.cuentaservice.selectedCuenta.monto);\n          this.cuentaservice.putSaldo(cuenta).subscribe((res) =>{\n            var transfer = new Transferencia();\n            transfer.cuenta = this.cuentaservice.selectedCuenta.cuenta;\n            transfer.monto = this.cuentaservice.selectedCuenta.monto ;\n            transfer.rut = this.cuentaservice.selectedCuenta.rut;\n            transfer.tipo = 'transferencia';\n            swal(\"Transferencia realizada!\");\n            this.transferservice.createTransfer(transfer).subscribe((res) =>{\n              console.log('transferencia registrada');\n            });\n          });\n      }else{\n        swal(\"Cuenta no existe\");\n      }\n    });\n    console.log('fin carga');\n  }\n  \n  volver(){\n    var rut =  this.rutaActiva.snapshot.paramMap.get('rut');\n    this.router.navigate(['/dashboard/'+rut]);\n\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-login100\\\">\\n    <div class=\\\"wrap-login100 p-t-50 p-b-90\\\">\\n        <form class=\\\"login100-form validate-form flex-sb flex-w\\\" #transferForm=\\\"ngForm\\\" (ngSubmit)=\\\"volver(transferForm)\\\">\\n\\n            <span class=\\\"login100-form-title p-b-51\\\">\\n                    Listado Transferencias\\n                </span>\\n            <div class=\\\"wrap-input100 m-b-16\\\">\\n                <table class=\\\"table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th scope=\\\"col\\\">Cuenta</th>\\n                            <th scope=\\\"col\\\">Monto</th>\\n                            <th scope=\\\"col\\\">Tipo</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr *ngFor=\\\"let transfers of transferservice.transferencias\\\">\\n                            <td>{{transfers.cuenta}}</td>\\n                            <td>{{transfers.monto}}</td>\\n                            <td>{{transfers.tipo}}</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n            <div class=\\\"container-login100-form-btn m-t-17\\\">\\n                <button class=\\\"login100-form-btn\\\" type=\\\"submit\\\">\\n                        Volver\\n                    </button>\\n            </div>\\n\\n        </form>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router,ActivatedRoute, Params } from '@angular/router';\n\nimport { TransferService } from \"../../services/transfer.service\";\nimport { NgForm } from \"@angular/forms\";\nimport { Transferencia } from '../../models/transfer';\n\n@Component({\n  selector: 'app-transferencia',\n  templateUrl: './transferencia.component.html',\n  styleUrls: ['./transferencia.component.css'],\n  providers: [TransferService],\n})\nexport class TransferComponent implements OnInit {\n\n  constructor(private transferservice: TransferService,\n              private router: Router,\n              private rutaActiva: ActivatedRoute) {}\n\n  ngOnInit() {\n    this.transferservice.selectedTransfer = new Transferencia();\n    var rut =  this.rutaActiva.snapshot.paramMap.get('rut');\n    this.transferservice.getTransfer().subscribe((res) => {\n      this.transferservice.transferencias = res;\n    });\n  }\n\n  volver(){\n    var rut =  this.rutaActiva.snapshot.paramMap.get('rut');\n    this.router.navigate(['/dashboard/'+rut]);\n\n  }\n\n}\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\nimport { Cuenta } from \"../models/cuenta\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class CuentaService {\r\n  selectedCuenta: Cuenta;\r\n\r\n  readonly URL_API = \"/api/cuenta\";\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.selectedCuenta = new Cuenta();\r\n  }\r\n\r\n  postCuenta(cuenta: Cuenta) {\r\n    return this.http.post(this.URL_API, cuenta);\r\n  }\r\n\r\n  getCuenta() {\r\n    return this.http.get<Cuenta[]>(this.URL_API);\r\n  }\r\n\r\n  putSaldo(cuenta:Cuenta) {\r\n    return this.http.put(this.URL_API + `/${cuenta._id}`+`/${cuenta.saldo}`, cuenta);\r\n  }\r\n\r\n  \r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\nimport { Transferencia } from \"../models/transfer\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class TransferService {\r\n  selectedTransfer: Transferencia;\r\n  transferencias: Transferencia[];\r\n  readonly URL_API = \"/api/transfer\";\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.selectedTransfer = new Transferencia();\r\n  }\r\n\r\n  createTransfer(transfer: Transferencia) {\r\n    return this.http.post(this.URL_API, transfer);\r\n  }\r\n\r\n  getTransfer() {\r\n    return this.http.get<Transferencia[]>(this.URL_API);\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\nimport { User } from \"../models/user\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class UserService {\r\n  selectedUser: User;\r\n  users: User[];\r\n  readonly URL_API = \"/api/users\";\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.selectedUser = new User();\r\n  }\r\n\r\n  postUser(user: User) {\r\n    return this.http.post(this.URL_API, user);\r\n  }\r\n\r\n  getUsers() {\r\n    return this.http.get<User[]>(this.URL_API);\r\n  }\r\n\r\n  getUser(correo : String) {\r\n    console.log('userService : ',correo);\r\n    return this.http.get<User[]>(this.URL_API+ `/${correo}`);\r\n  }\r\n\r\n  putUser(user: User) {\r\n    return this.http.put(this.URL_API + `/${user._id}`, user);\r\n  }\r\n\r\n  deleteUser(_id: string) {\r\n    return this.http.delete(this.URL_API + `/${_id}`);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}